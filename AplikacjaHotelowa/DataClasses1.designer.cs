#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AplikacjaHotelowa
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AplikacjaHotelowa")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdresy(Adresy instance);
    partial void UpdateAdresy(Adresy instance);
    partial void DeleteAdresy(Adresy instance);
    partial void InsertApartamenty(Apartamenty instance);
    partial void UpdateApartamenty(Apartamenty instance);
    partial void DeleteApartamenty(Apartamenty instance);
    partial void InsertBudynki(Budynki instance);
    partial void UpdateBudynki(Budynki instance);
    partial void DeleteBudynki(Budynki instance);
    partial void InsertOsoby(Osoby instance);
    partial void UpdateOsoby(Osoby instance);
    partial void DeleteOsoby(Osoby instance);
    partial void InsertRezerwacja(Rezerwacja instance);
    partial void UpdateRezerwacja(Rezerwacja instance);
    partial void DeleteRezerwacja(Rezerwacja instance);
    partial void InsertStatusZameldowania(StatusZameldowania instance);
    partial void UpdateStatusZameldowania(StatusZameldowania instance);
    partial void DeleteStatusZameldowania(StatusZameldowania instance);
    partial void InsertTyp(Typ instance);
    partial void UpdateTyp(Typ instance);
    partial void DeleteTyp(Typ instance);
    partial void InsertUdogodnienia(Udogodnienia instance);
    partial void UpdateUdogodnienia(Udogodnienia instance);
    partial void DeleteUdogodnienia(Udogodnienia instance);
    partial void InsertUdogodnieniaLista(UdogodnieniaLista instance);
    partial void UpdateUdogodnieniaLista(UdogodnieniaLista instance);
    partial void DeleteUdogodnieniaLista(UdogodnieniaLista instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::AplikacjaHotelowa.Properties.Settings.Default.AplikacjaHotelowaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adresy> Adresies
		{
			get
			{
				return this.GetTable<Adresy>();
			}
		}
		
		public System.Data.Linq.Table<Apartamenty> Apartamenties
		{
			get
			{
				return this.GetTable<Apartamenty>();
			}
		}
		
		public System.Data.Linq.Table<Budynki> Budynkis
		{
			get
			{
				return this.GetTable<Budynki>();
			}
		}
		
		public System.Data.Linq.Table<Osoby> Osobies
		{
			get
			{
				return this.GetTable<Osoby>();
			}
		}
		
		public System.Data.Linq.Table<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this.GetTable<Rezerwacja>();
			}
		}
		
		public System.Data.Linq.Table<StatusZameldowania> StatusZameldowanias
		{
			get
			{
				return this.GetTable<StatusZameldowania>();
			}
		}
		
		public System.Data.Linq.Table<Typ> Typs
		{
			get
			{
				return this.GetTable<Typ>();
			}
		}
		
		public System.Data.Linq.Table<Udogodnienia> Udogodnienias
		{
			get
			{
				return this.GetTable<Udogodnienia>();
			}
		}
		
		public System.Data.Linq.Table<UdogodnieniaLista> UdogodnieniaListas
		{
			get
			{
				return this.GetTable<UdogodnieniaLista>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertAdres")]
		public int InsertAdres([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Miasto", DbType="VarChar(50)")] string miasto, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ulica", DbType="VarChar(50)")] string ulica, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumerBudynku", DbType="VarChar(50)")] string numerBudynku, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Wojewodztwo", DbType="VarChar(50)")] string wojewodztwo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kraj", DbType="VarChar(50)")] string kraj)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), miasto, ulica, numerBudynku, wojewodztwo, kraj);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAdres")]
		public int UpdateAdres([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Miasto", DbType="VarChar(50)")] string miasto, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ulica", DbType="VarChar(50)")] string ulica, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumerBudynku", DbType="VarChar(50)")] string numerBudynku, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Wojewodztwo", DbType="VarChar(50)")] string wojewodztwo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kraj", DbType="VarChar(50)")] string kraj)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, miasto, ulica, numerBudynku, wojewodztwo, kraj);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAdres")]
		public int DeleteAdres([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adresy")]
	public partial class Adresy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Miasto;
		
		private string _Ulica;
		
		private string _NumerBudynku;
		
		private string _Województwo;
		
		private string _Kraj;
		
		private EntitySet<Budynki> _Budynkis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNumerBudynkuChanging(string value);
    partial void OnNumerBudynkuChanged();
    partial void OnWojewództwoChanging(string value);
    partial void OnWojewództwoChanged();
    partial void OnKrajChanging(string value);
    partial void OnKrajChanged();
    #endregion
		
		public Adresy()
		{
			this._Budynkis = new EntitySet<Budynki>(new Action<Budynki>(this.attach_Budynkis), new Action<Budynki>(this.detach_Budynkis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerBudynku", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NumerBudynku
		{
			get
			{
				return this._NumerBudynku;
			}
			set
			{
				if ((this._NumerBudynku != value))
				{
					this.OnNumerBudynkuChanging(value);
					this.SendPropertyChanging();
					this._NumerBudynku = value;
					this.SendPropertyChanged("NumerBudynku");
					this.OnNumerBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Województwo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Województwo
		{
			get
			{
				return this._Województwo;
			}
			set
			{
				if ((this._Województwo != value))
				{
					this.OnWojewództwoChanging(value);
					this.SendPropertyChanging();
					this._Województwo = value;
					this.SendPropertyChanged("Województwo");
					this.OnWojewództwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kraj", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Kraj
		{
			get
			{
				return this._Kraj;
			}
			set
			{
				if ((this._Kraj != value))
				{
					this.OnKrajChanging(value);
					this.SendPropertyChanging();
					this._Kraj = value;
					this.SendPropertyChanged("Kraj");
					this.OnKrajChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresy_Budynki", Storage="_Budynkis", ThisKey="Id", OtherKey="Adresy_Id")]
		public EntitySet<Budynki> Budynkis
		{
			get
			{
				return this._Budynkis;
			}
			set
			{
				this._Budynkis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budynkis(Budynki entity)
		{
			this.SendPropertyChanging();
			entity.Adresy = this;
		}
		
		private void detach_Budynkis(Budynki entity)
		{
			this.SendPropertyChanging();
			entity.Adresy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Apartamenty")]
	public partial class Apartamenty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BudynkiId;
		
		private int _TypId;
		
		private int _NumerPokoju;
		
		private decimal _Cena;
		
		private EntitySet<Rezerwacja> _Rezerwacjas;
		
		private EntitySet<UdogodnieniaLista> _UdogodnieniaListas;
		
		private EntityRef<Budynki> _Budynki;
		
		private EntityRef<Typ> _Typ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBudynkiIdChanging(int value);
    partial void OnBudynkiIdChanged();
    partial void OnTypIdChanging(int value);
    partial void OnTypIdChanged();
    partial void OnNumerPokojuChanging(int value);
    partial void OnNumerPokojuChanged();
    partial void OnCenaChanging(decimal value);
    partial void OnCenaChanged();
    #endregion
		
		public Apartamenty()
		{
			this._Rezerwacjas = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacjas), new Action<Rezerwacja>(this.detach_Rezerwacjas));
			this._UdogodnieniaListas = new EntitySet<UdogodnieniaLista>(new Action<UdogodnieniaLista>(this.attach_UdogodnieniaListas), new Action<UdogodnieniaLista>(this.detach_UdogodnieniaListas));
			this._Budynki = default(EntityRef<Budynki>);
			this._Typ = default(EntityRef<Typ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudynkiId", DbType="Int NOT NULL")]
		public int BudynkiId
		{
			get
			{
				return this._BudynkiId;
			}
			set
			{
				if ((this._BudynkiId != value))
				{
					if (this._Budynki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudynkiIdChanging(value);
					this.SendPropertyChanging();
					this._BudynkiId = value;
					this.SendPropertyChanged("BudynkiId");
					this.OnBudynkiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypId", DbType="Int NOT NULL")]
		public int TypId
		{
			get
			{
				return this._TypId;
			}
			set
			{
				if ((this._TypId != value))
				{
					if (this._Typ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypIdChanging(value);
					this.SendPropertyChanging();
					this._TypId = value;
					this.SendPropertyChanged("TypId");
					this.OnTypIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerPokoju", DbType="Int NOT NULL")]
		public int NumerPokoju
		{
			get
			{
				return this._NumerPokoju;
			}
			set
			{
				if ((this._NumerPokoju != value))
				{
					this.OnNumerPokojuChanging(value);
					this.SendPropertyChanging();
					this._NumerPokoju = value;
					this.SendPropertyChanged("NumerPokoju");
					this.OnNumerPokojuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apartamenty_Rezerwacja", Storage="_Rezerwacjas", ThisKey="Id", OtherKey="ApartamentyId")]
		public EntitySet<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this._Rezerwacjas;
			}
			set
			{
				this._Rezerwacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apartamenty_UdogodnieniaLista", Storage="_UdogodnieniaListas", ThisKey="Id", OtherKey="ApartamentyId")]
		public EntitySet<UdogodnieniaLista> UdogodnieniaListas
		{
			get
			{
				return this._UdogodnieniaListas;
			}
			set
			{
				this._UdogodnieniaListas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budynki_Apartamenty", Storage="_Budynki", ThisKey="BudynkiId", OtherKey="Id", IsForeignKey=true)]
		public Budynki Budynki
		{
			get
			{
				return this._Budynki.Entity;
			}
			set
			{
				Budynki previousValue = this._Budynki.Entity;
				if (((previousValue != value) 
							|| (this._Budynki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budynki.Entity = null;
						previousValue.Apartamenties.Remove(this);
					}
					this._Budynki.Entity = value;
					if ((value != null))
					{
						value.Apartamenties.Add(this);
						this._BudynkiId = value.Id;
					}
					else
					{
						this._BudynkiId = default(int);
					}
					this.SendPropertyChanged("Budynki");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Apartamenty", Storage="_Typ", ThisKey="TypId", OtherKey="Id", IsForeignKey=true)]
		public Typ Typ
		{
			get
			{
				return this._Typ.Entity;
			}
			set
			{
				Typ previousValue = this._Typ.Entity;
				if (((previousValue != value) 
							|| (this._Typ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ.Entity = null;
						previousValue.Apartamenties.Remove(this);
					}
					this._Typ.Entity = value;
					if ((value != null))
					{
						value.Apartamenties.Add(this);
						this._TypId = value.Id;
					}
					else
					{
						this._TypId = default(int);
					}
					this.SendPropertyChanged("Typ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Apartamenty = this;
		}
		
		private void detach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Apartamenty = null;
		}
		
		private void attach_UdogodnieniaListas(UdogodnieniaLista entity)
		{
			this.SendPropertyChanging();
			entity.Apartamenty = this;
		}
		
		private void detach_UdogodnieniaListas(UdogodnieniaLista entity)
		{
			this.SendPropertyChanging();
			entity.Apartamenty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budynki")]
	public partial class Budynki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa;
		
		private int _TelMenadzer;
		
		private int _TelRecepcja;
		
		private string _Opis;
		
		private int _Adresy_Id;
		
		private EntitySet<Apartamenty> _Apartamenties;
		
		private EntityRef<Adresy> _Adresy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnTelMenadzerChanging(int value);
    partial void OnTelMenadzerChanged();
    partial void OnTelRecepcjaChanging(int value);
    partial void OnTelRecepcjaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnAdresy_IdChanging(int value);
    partial void OnAdresy_IdChanged();
    #endregion
		
		public Budynki()
		{
			this._Apartamenties = new EntitySet<Apartamenty>(new Action<Apartamenty>(this.attach_Apartamenties), new Action<Apartamenty>(this.detach_Apartamenties));
			this._Adresy = default(EntityRef<Adresy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelMenadzer", DbType="Int NOT NULL")]
		public int TelMenadzer
		{
			get
			{
				return this._TelMenadzer;
			}
			set
			{
				if ((this._TelMenadzer != value))
				{
					this.OnTelMenadzerChanging(value);
					this.SendPropertyChanging();
					this._TelMenadzer = value;
					this.SendPropertyChanged("TelMenadzer");
					this.OnTelMenadzerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelRecepcja", DbType="Int NOT NULL")]
		public int TelRecepcja
		{
			get
			{
				return this._TelRecepcja;
			}
			set
			{
				if ((this._TelRecepcja != value))
				{
					this.OnTelRecepcjaChanging(value);
					this.SendPropertyChanging();
					this._TelRecepcja = value;
					this.SendPropertyChanged("TelRecepcja");
					this.OnTelRecepcjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresy_Id", DbType="Int NOT NULL")]
		public int Adresy_Id
		{
			get
			{
				return this._Adresy_Id;
			}
			set
			{
				if ((this._Adresy_Id != value))
				{
					if (this._Adresy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresy_IdChanging(value);
					this.SendPropertyChanging();
					this._Adresy_Id = value;
					this.SendPropertyChanged("Adresy_Id");
					this.OnAdresy_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budynki_Apartamenty", Storage="_Apartamenties", ThisKey="Id", OtherKey="BudynkiId")]
		public EntitySet<Apartamenty> Apartamenties
		{
			get
			{
				return this._Apartamenties;
			}
			set
			{
				this._Apartamenties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresy_Budynki", Storage="_Adresy", ThisKey="Adresy_Id", OtherKey="Id", IsForeignKey=true)]
		public Adresy Adresy
		{
			get
			{
				return this._Adresy.Entity;
			}
			set
			{
				Adresy previousValue = this._Adresy.Entity;
				if (((previousValue != value) 
							|| (this._Adresy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adresy.Entity = null;
						previousValue.Budynkis.Remove(this);
					}
					this._Adresy.Entity = value;
					if ((value != null))
					{
						value.Budynkis.Add(this);
						this._Adresy_Id = value.Id;
					}
					else
					{
						this._Adresy_Id = default(int);
					}
					this.SendPropertyChanged("Adresy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apartamenties(Apartamenty entity)
		{
			this.SendPropertyChanging();
			entity.Budynki = this;
		}
		
		private void detach_Apartamenties(Apartamenty entity)
		{
			this.SendPropertyChanging();
			entity.Budynki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Osoby")]
	public partial class Osoby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _DataUrodzenia;
		
		private string _Tel;
		
		private EntitySet<Rezerwacja> _Rezerwacjas;
		
		private EntitySet<StatusZameldowania> _StatusZameldowanias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnDataUrodzeniaChanging(string value);
    partial void OnDataUrodzeniaChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    #endregion
		
		public Osoby()
		{
			this._Rezerwacjas = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacjas), new Action<Rezerwacja>(this.detach_Rezerwacjas));
			this._StatusZameldowanias = new EntitySet<StatusZameldowania>(new Action<StatusZameldowania>(this.attach_StatusZameldowanias), new Action<StatusZameldowania>(this.detach_StatusZameldowanias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataUrodzenia", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DataUrodzenia
		{
			get
			{
				return this._DataUrodzenia;
			}
			set
			{
				if ((this._DataUrodzenia != value))
				{
					this.OnDataUrodzeniaChanging(value);
					this.SendPropertyChanging();
					this._DataUrodzenia = value;
					this.SendPropertyChanged("DataUrodzenia");
					this.OnDataUrodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osoby_Rezerwacja", Storage="_Rezerwacjas", ThisKey="Id", OtherKey="OsobyId")]
		public EntitySet<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this._Rezerwacjas;
			}
			set
			{
				this._Rezerwacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osoby_StatusZameldowania", Storage="_StatusZameldowanias", ThisKey="Id", OtherKey="OsobyId")]
		public EntitySet<StatusZameldowania> StatusZameldowanias
		{
			get
			{
				return this._StatusZameldowanias;
			}
			set
			{
				this._StatusZameldowanias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Osoby = this;
		}
		
		private void detach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Osoby = null;
		}
		
		private void attach_StatusZameldowanias(StatusZameldowania entity)
		{
			this.SendPropertyChanging();
			entity.Osoby = this;
		}
		
		private void detach_StatusZameldowanias(StatusZameldowania entity)
		{
			this.SendPropertyChanging();
			entity.Osoby = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezerwacja")]
	public partial class Rezerwacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusZameldowaniaId;
		
		private int _ApartamentyId;
		
		private int _OsobyId;
		
		private string _StatusRezerwacji;
		
		private System.DateTime _TerminPrzybycia;
		
		private System.DateTime _TerminOdjazdu;
		
		private EntityRef<Apartamenty> _Apartamenty;
		
		private EntityRef<Osoby> _Osoby;
		
		private EntityRef<StatusZameldowania> _StatusZameldowania;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusZameldowaniaIdChanging(int value);
    partial void OnStatusZameldowaniaIdChanged();
    partial void OnApartamentyIdChanging(int value);
    partial void OnApartamentyIdChanged();
    partial void OnOsobyIdChanging(int value);
    partial void OnOsobyIdChanged();
    partial void OnStatusRezerwacjiChanging(string value);
    partial void OnStatusRezerwacjiChanged();
    partial void OnTerminPrzybyciaChanging(System.DateTime value);
    partial void OnTerminPrzybyciaChanged();
    partial void OnTerminOdjazduChanging(System.DateTime value);
    partial void OnTerminOdjazduChanged();
    #endregion
		
		public Rezerwacja()
		{
			this._Apartamenty = default(EntityRef<Apartamenty>);
			this._Osoby = default(EntityRef<Osoby>);
			this._StatusZameldowania = default(EntityRef<StatusZameldowania>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusZameldowaniaId", DbType="Int NOT NULL")]
		public int StatusZameldowaniaId
		{
			get
			{
				return this._StatusZameldowaniaId;
			}
			set
			{
				if ((this._StatusZameldowaniaId != value))
				{
					if (this._StatusZameldowania.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusZameldowaniaIdChanging(value);
					this.SendPropertyChanging();
					this._StatusZameldowaniaId = value;
					this.SendPropertyChanged("StatusZameldowaniaId");
					this.OnStatusZameldowaniaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApartamentyId", DbType="Int NOT NULL")]
		public int ApartamentyId
		{
			get
			{
				return this._ApartamentyId;
			}
			set
			{
				if ((this._ApartamentyId != value))
				{
					if (this._Apartamenty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApartamentyIdChanging(value);
					this.SendPropertyChanging();
					this._ApartamentyId = value;
					this.SendPropertyChanged("ApartamentyId");
					this.OnApartamentyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsobyId", DbType="Int NOT NULL")]
		public int OsobyId
		{
			get
			{
				return this._OsobyId;
			}
			set
			{
				if ((this._OsobyId != value))
				{
					if (this._Osoby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsobyIdChanging(value);
					this.SendPropertyChanging();
					this._OsobyId = value;
					this.SendPropertyChanged("OsobyId");
					this.OnOsobyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusRezerwacji", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StatusRezerwacji
		{
			get
			{
				return this._StatusRezerwacji;
			}
			set
			{
				if ((this._StatusRezerwacji != value))
				{
					this.OnStatusRezerwacjiChanging(value);
					this.SendPropertyChanging();
					this._StatusRezerwacji = value;
					this.SendPropertyChanged("StatusRezerwacji");
					this.OnStatusRezerwacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPrzybycia", DbType="DateTime NOT NULL")]
		public System.DateTime TerminPrzybycia
		{
			get
			{
				return this._TerminPrzybycia;
			}
			set
			{
				if ((this._TerminPrzybycia != value))
				{
					this.OnTerminPrzybyciaChanging(value);
					this.SendPropertyChanging();
					this._TerminPrzybycia = value;
					this.SendPropertyChanged("TerminPrzybycia");
					this.OnTerminPrzybyciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminOdjazdu", DbType="DateTime NOT NULL")]
		public System.DateTime TerminOdjazdu
		{
			get
			{
				return this._TerminOdjazdu;
			}
			set
			{
				if ((this._TerminOdjazdu != value))
				{
					this.OnTerminOdjazduChanging(value);
					this.SendPropertyChanging();
					this._TerminOdjazdu = value;
					this.SendPropertyChanged("TerminOdjazdu");
					this.OnTerminOdjazduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apartamenty_Rezerwacja", Storage="_Apartamenty", ThisKey="ApartamentyId", OtherKey="Id", IsForeignKey=true)]
		public Apartamenty Apartamenty
		{
			get
			{
				return this._Apartamenty.Entity;
			}
			set
			{
				Apartamenty previousValue = this._Apartamenty.Entity;
				if (((previousValue != value) 
							|| (this._Apartamenty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Apartamenty.Entity = null;
						previousValue.Rezerwacjas.Remove(this);
					}
					this._Apartamenty.Entity = value;
					if ((value != null))
					{
						value.Rezerwacjas.Add(this);
						this._ApartamentyId = value.Id;
					}
					else
					{
						this._ApartamentyId = default(int);
					}
					this.SendPropertyChanged("Apartamenty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osoby_Rezerwacja", Storage="_Osoby", ThisKey="OsobyId", OtherKey="Id", IsForeignKey=true)]
		public Osoby Osoby
		{
			get
			{
				return this._Osoby.Entity;
			}
			set
			{
				Osoby previousValue = this._Osoby.Entity;
				if (((previousValue != value) 
							|| (this._Osoby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Osoby.Entity = null;
						previousValue.Rezerwacjas.Remove(this);
					}
					this._Osoby.Entity = value;
					if ((value != null))
					{
						value.Rezerwacjas.Add(this);
						this._OsobyId = value.Id;
					}
					else
					{
						this._OsobyId = default(int);
					}
					this.SendPropertyChanged("Osoby");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusZameldowania_Rezerwacja", Storage="_StatusZameldowania", ThisKey="StatusZameldowaniaId", OtherKey="Id", IsForeignKey=true)]
		public StatusZameldowania StatusZameldowania
		{
			get
			{
				return this._StatusZameldowania.Entity;
			}
			set
			{
				StatusZameldowania previousValue = this._StatusZameldowania.Entity;
				if (((previousValue != value) 
							|| (this._StatusZameldowania.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusZameldowania.Entity = null;
						previousValue.Rezerwacjas.Remove(this);
					}
					this._StatusZameldowania.Entity = value;
					if ((value != null))
					{
						value.Rezerwacjas.Add(this);
						this._StatusZameldowaniaId = value.Id;
					}
					else
					{
						this._StatusZameldowaniaId = default(int);
					}
					this.SendPropertyChanged("StatusZameldowania");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusZameldowania")]
	public partial class StatusZameldowania : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _opis;
		
		private int _OsobyId;
		
		private EntitySet<Rezerwacja> _Rezerwacjas;
		
		private EntityRef<Osoby> _Osoby;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    partial void OnOsobyIdChanging(int value);
    partial void OnOsobyIdChanged();
    #endregion
		
		public StatusZameldowania()
		{
			this._Rezerwacjas = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacjas), new Action<Rezerwacja>(this.detach_Rezerwacjas));
			this._Osoby = default(EntityRef<Osoby>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsobyId", DbType="Int NOT NULL")]
		public int OsobyId
		{
			get
			{
				return this._OsobyId;
			}
			set
			{
				if ((this._OsobyId != value))
				{
					if (this._Osoby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsobyIdChanging(value);
					this.SendPropertyChanging();
					this._OsobyId = value;
					this.SendPropertyChanged("OsobyId");
					this.OnOsobyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusZameldowania_Rezerwacja", Storage="_Rezerwacjas", ThisKey="Id", OtherKey="StatusZameldowaniaId")]
		public EntitySet<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this._Rezerwacjas;
			}
			set
			{
				this._Rezerwacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osoby_StatusZameldowania", Storage="_Osoby", ThisKey="OsobyId", OtherKey="Id", IsForeignKey=true)]
		public Osoby Osoby
		{
			get
			{
				return this._Osoby.Entity;
			}
			set
			{
				Osoby previousValue = this._Osoby.Entity;
				if (((previousValue != value) 
							|| (this._Osoby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Osoby.Entity = null;
						previousValue.StatusZameldowanias.Remove(this);
					}
					this._Osoby.Entity = value;
					if ((value != null))
					{
						value.StatusZameldowanias.Add(this);
						this._OsobyId = value.Id;
					}
					else
					{
						this._OsobyId = default(int);
					}
					this.SendPropertyChanged("Osoby");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.StatusZameldowania = this;
		}
		
		private void detach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.StatusZameldowania = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Typ")]
	public partial class Typ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa;
		
		private string _Opis;
		
		private EntitySet<Apartamenty> _Apartamenties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public Typ()
		{
			this._Apartamenties = new EntitySet<Apartamenty>(new Action<Apartamenty>(this.attach_Apartamenties), new Action<Apartamenty>(this.detach_Apartamenties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Apartamenty", Storage="_Apartamenties", ThisKey="Id", OtherKey="TypId")]
		public EntitySet<Apartamenty> Apartamenties
		{
			get
			{
				return this._Apartamenties;
			}
			set
			{
				this._Apartamenties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apartamenties(Apartamenty entity)
		{
			this.SendPropertyChanging();
			entity.Typ = this;
		}
		
		private void detach_Apartamenties(Apartamenty entity)
		{
			this.SendPropertyChanging();
			entity.Typ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Udogodnienia")]
	public partial class Udogodnienia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nazwa;
		
		private string _opis;
		
		private EntitySet<UdogodnieniaLista> _UdogodnieniaListas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    #endregion
		
		public Udogodnienia()
		{
			this._UdogodnieniaListas = new EntitySet<UdogodnieniaLista>(new Action<UdogodnieniaLista>(this.attach_UdogodnieniaListas), new Action<UdogodnieniaLista>(this.detach_UdogodnieniaListas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="NVarChar(MAX)")]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Udogodnienia_UdogodnieniaLista", Storage="_UdogodnieniaListas", ThisKey="Id", OtherKey="UdogodnieniaId")]
		public EntitySet<UdogodnieniaLista> UdogodnieniaListas
		{
			get
			{
				return this._UdogodnieniaListas;
			}
			set
			{
				this._UdogodnieniaListas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UdogodnieniaListas(UdogodnieniaLista entity)
		{
			this.SendPropertyChanging();
			entity.Udogodnienia = this;
		}
		
		private void detach_UdogodnieniaListas(UdogodnieniaLista entity)
		{
			this.SendPropertyChanging();
			entity.Udogodnienia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UdogodnieniaLista")]
	public partial class UdogodnieniaLista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UdogodnieniaId;
		
		private int _ApartamentyId;
		
		private EntityRef<Apartamenty> _Apartamenty;
		
		private EntityRef<Udogodnienia> _Udogodnienia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUdogodnieniaIdChanging(int value);
    partial void OnUdogodnieniaIdChanged();
    partial void OnApartamentyIdChanging(int value);
    partial void OnApartamentyIdChanged();
    #endregion
		
		public UdogodnieniaLista()
		{
			this._Apartamenty = default(EntityRef<Apartamenty>);
			this._Udogodnienia = default(EntityRef<Udogodnienia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UdogodnieniaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UdogodnieniaId
		{
			get
			{
				return this._UdogodnieniaId;
			}
			set
			{
				if ((this._UdogodnieniaId != value))
				{
					if (this._Udogodnienia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUdogodnieniaIdChanging(value);
					this.SendPropertyChanging();
					this._UdogodnieniaId = value;
					this.SendPropertyChanged("UdogodnieniaId");
					this.OnUdogodnieniaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApartamentyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApartamentyId
		{
			get
			{
				return this._ApartamentyId;
			}
			set
			{
				if ((this._ApartamentyId != value))
				{
					if (this._Apartamenty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApartamentyIdChanging(value);
					this.SendPropertyChanging();
					this._ApartamentyId = value;
					this.SendPropertyChanged("ApartamentyId");
					this.OnApartamentyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apartamenty_UdogodnieniaLista", Storage="_Apartamenty", ThisKey="ApartamentyId", OtherKey="Id", IsForeignKey=true)]
		public Apartamenty Apartamenty
		{
			get
			{
				return this._Apartamenty.Entity;
			}
			set
			{
				Apartamenty previousValue = this._Apartamenty.Entity;
				if (((previousValue != value) 
							|| (this._Apartamenty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Apartamenty.Entity = null;
						previousValue.UdogodnieniaListas.Remove(this);
					}
					this._Apartamenty.Entity = value;
					if ((value != null))
					{
						value.UdogodnieniaListas.Add(this);
						this._ApartamentyId = value.Id;
					}
					else
					{
						this._ApartamentyId = default(int);
					}
					this.SendPropertyChanged("Apartamenty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Udogodnienia_UdogodnieniaLista", Storage="_Udogodnienia", ThisKey="UdogodnieniaId", OtherKey="Id", IsForeignKey=true)]
		public Udogodnienia Udogodnienia
		{
			get
			{
				return this._Udogodnienia.Entity;
			}
			set
			{
				Udogodnienia previousValue = this._Udogodnienia.Entity;
				if (((previousValue != value) 
							|| (this._Udogodnienia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Udogodnienia.Entity = null;
						previousValue.UdogodnieniaListas.Remove(this);
					}
					this._Udogodnienia.Entity = value;
					if ((value != null))
					{
						value.UdogodnieniaListas.Add(this);
						this._UdogodnieniaId = value.Id;
					}
					else
					{
						this._UdogodnieniaId = default(int);
					}
					this.SendPropertyChanged("Udogodnienia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
